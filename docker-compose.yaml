services:
  goservice:
    build:
      context: .
      dockerfile: QuietStore/Dockerfile
    image: quietstore-service:dev
    container_name: quietstore-service
    ports: ["8080:8080"]
    env_file: [./QuietStore/.env]
    volumes:
      - ./certs/minio/ca.pem:/etc/ssl/certs/minio-ca.pem:ro
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/api/v1/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5

  db:
    image: postgres:16-alpine
    env_file: [./QuietStore/.env]
    ports: ["5432:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-quietstore} -d ${POSTGRES_DB:-quietstore}"]
      interval: 5s
      timeout: 3s
      retries: 10

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ACCESS_KEY}"
      MINIO_ROOT_PASSWORD: "${MINIO_SECRET_KEY}"
    ports: ["9000:9000","9001:9001"]
    volumes:
      - minio_data:/data
      - ./certs/minio/public.crt:/root/.minio/certs/public.crt:ro
      - ./certs/minio/private.key:/root/.minio/certs/private.key:ro

  caddy:
    image: caddy:2
    ports: ["8443:443"]
    volumes:
      - ./certs/caddy:/data
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      - goservice

volumes:
  pg_data:
  minio_data:
